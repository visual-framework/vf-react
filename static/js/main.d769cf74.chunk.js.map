{"version":3,"sources":["component-templates/vf-intro.js","Home.js","TestPage.js","components/component-variants/ComponentVariants.jsx","components/components-showcase/ComponentShowcase.jsx","App.js","serviceWorker.js","webpack:///./src/index.js?b635"],"names":["VfIntro","className","this","props","name","href","React","Component","Home","Fragment","card_title","variant","newTheme","card_image","card_text","card_image__alt","TestPage","to","src","VfLogoPath","alt","target","rel","activeClassName","ComponentVariants","renderComponent","renderCodeString","singleChoiceOptions","booleanOptions","useState","state","choiceName","singleChoices","setSingleChoices","booleanChoices","setBooleanChoices","Object","entries","map","options","htmlFor","style","width","id","onChange","event","choiceValue","setSingleChoiceOption","value","type","checked","toggleBooleanChoiceOption","ComponentShowcase","theme","size","outline","selectedProps","text","App","basename","exact","path","component","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.d769cf74.chunk.js","sourcesContent":["import React from 'react';\n\nclass VfIntro extends React.Component {\n  render() {\n    return (\n      <section className=\"vf-intro | embl-grid embl-grid--has-centered-content\">\n        <div>\n          {/* empty */}\n        </div>\n        <div>\n          <h1 className=\"vf-intro__heading vf-intro__heading--has-tag\">{this.props.name} <a href=\"#toCome\" className=\"vf-badge vf-badge--primary vf-badge--phases\">beta</a></h1>\n          <p className=\"vf-lede\">Cancer is a generic term for lots of different diseases in which cells divide many more times than usual. This abnormal growth can affect many cell types in almost any part of the body.</p>\n          <p className=\"vf-intro__text\">Cancer is a multi-stage process. Normal cells begin to divide abnormally, spreading beyond their normal boundaries, and abnormal tissue growth causes swellings called tumours to form. Tumours can be benign – with no harmful effect on the body – or malignant, invading healthy tissue and interfering with normal bodily functions.</p>\n          <p className=\"vf-intro__text\">There are more than 100 types of cancer and symptoms vary depending on the type. <a className=\"vf-link\" href=\"#toCome\">Read more about Cancer</a>.</p>\n        </div>\n      </section>\n    );\n  }\n}\n\nexport default VfIntro;\n","import React from 'react';\nimport { BrowserRouter as Router, Route, Link, NavLink } from \"react-router-dom\";\nimport VfIntro from './component-templates/vf-intro';\nimport './Home.css';\n\n// VF njk templates\n// import { VfCard } from './vf-components/vf-core-components/vf-card/vf-card.react.js';\nimport { VfCard } from \"@visual-framework/vf-card/vf-card.react.js\"; \nimport { VfButton } from \"@visual-framework/vf-button/vf-button.react.js\"; \n\n\nfunction Home() {\n  return (  \n    <React.Fragment>\n      <VfIntro name=\"React for the VF 2.0\" />\n\n      <section className=\"embl-grid embl-grid--has-centered-content\">\n        <div>\n        {/* empty */}\n        </div> \n        <div className=\"vf-content\">\n        <h2>Quickstart</h2>\n          <pre><code>\n            (THIS DOES NOT YET WORK) npm init @visual-framework/vf-react your-new-site-name\n          </code></pre>\n      <p>This will install a new <a href=\"https://github.com/visual-framework/vf-react/\"><code>vf-react</code></a> to a folder named <code>your-new-site-name</code>.</p>\n      <p>Then follow the onscreen prompts and links below to develop and configure.</p>\n\n      <div className=\"vf-grid vf-grid__col-2\">\n      <VfCard card_title=\"React vf-card\" variant=\"striped\" newTheme=\"primary\" card_image=\"https://acxngcvroo.cloudimg.io/v7/https://www.embl.org/files/wp-content/uploads/2020/04/SCHOOLS_1011_ells-learninglab_hd_01_Cool_500px.jpg\" card_text=\"I'm made with a VF component that supports react \" card_image__alt=\"people\"></VfCard>\n      <VfCard card_title=\"React vf-card 2\" variant=\"striped\" newTheme=\"primary\" card_image=\"https://acxngcvroo.cloudimg.io/v7/https://www.embl.org/files/wp-content/uploads/2020/04/SCHOOLS_1011_ells-learninglab_hd_01_Cool_500px.jpg\" card_text=\"im some more text\" card_image__alt=\"people\"></VfCard>\n      </div>\n\n\n\n      <h2>What you get</h2> \n\n      <ul>\n      <li>a site created with Create React App</li>\n      <li>and integrated with the Visual Framework component system</li>\n      </ul>\n\n      <h3>Component installation</h3>\n\n      <p>To add a component you can use npm/Yarn or install it manually.</p>\n      <p>In either case you'll need to re-run <code>gulp dev</code> to ensure the component is fully loaded.</p>\n\n      <ul>\n      <li>installation: <code>yarn add @visual-framework/vf-logo</code></li>\n      <li>updating: <code>yarn upgrade-interactive --latest</code></li>\n      </ul>\n\n      <h3>Manual installation for customisation</h3>\n\n      <ol>\n      <li>Download a pattern</li>\n      <li>Copy it to <code>./vf-components/vf-component-name</code></li>\n      </ol>\n\n      <h3>Add your own local component</h3>\n      <p>You can add a custom VF-compatible component to <code>./vf-components</code> and use it in\n      your site.</p>\n\n      <ul>\n      <li><code>gulp vf-component</code></li>\n      </ul>\n\n      </div>\n      </section>\n\n    </React.Fragment>\n  );\n}\n\nexport default Home;\n","import React from 'react';\nimport { BrowserRouter as Router, Route, Link, NavLink } from \"react-router-dom\";\nimport VfLogoPath from '@visual-framework/vf-logo/assets/logo.svg';\n\nfunction TestPage() {\n  return (\n    <section className=\"embl-grid embl-grid--has-centered-content\">\n      <div>\n        {/* empty */}\n      </div>\n      <div>\n        <nav className=\"vf-breadcrumbs\" aria-label=\"Breadcrumb\">\n          <ul className=\"vf-breadcrumbs__list | vf-list vf-list--inline\">\n            <li className=\"vf-breadcrumbs__item\">\n              <NavLink className=\"vf-breadcrumbs__link\" to=\"/\">VF React boilerplate</NavLink>\n            </li>\n            <li className=\"vf-breadcrumbs__item\">\n              Test page\n            </li>\n          </ul>\n        </nav>\n\n        <h1 className=\"intro__text\">A simple page to test JS state.</h1>\n\n\n        <header className=\"App-header\">\n          <img src={VfLogoPath} className=\"App-logo\" alt=\"logo\" />\n          <p className=\"vf-text\">\n            Edit <code className=\"vf-code-example\">src/Home.js</code> or <br/> <code className=\"vf-code-example\">vf-components/vf-componenet-rollup/index.scss</code> and save to reload.\n          </p>\n          <a\n            className=\"vf-link\"\n            href=\"https://reactjs.org\"\n            target=\"_blank\"\n            rel=\"noopener noreferrer\"\n          >\n            Learn React\n          </a>\n        </header>\n\n        <ul className=\"vf-navigation__list | vf-list--inline\">\n          <li className=\"vf-navigation__item\">\n            <NavLink className=\"vf-button vf-button--primary\" to=\"/\" activeClassName=\"\">Back to the homepage</NavLink>\n          </li>\n        </ul>\n\n      </div>\n\n    </section>\n  );\n}\n\nexport default TestPage;\n","import React, { useState } from 'react'\nimport './ComponentVariants.scss'\n\n/* Generic component to show component variant options and rendered component along with generated code */\nfunction ComponentVariants({\n  renderComponent, // component render method\n  renderCodeString, //method that takes all options and outputs code string\n  singleChoiceOptions = {}, // example: {'size' : ['s','m','l'], 'theme': ['primary', 'secondary']}\n  booleanOptions = {}, // example: {'outline' : true, 'some_option': false}\n}) {\n  const [singleChoices, setSingleChoices] = useState(() => {\n    const state = {}\n    for (let choiceName in singleChoiceOptions) {\n      state[choiceName] = singleChoiceOptions[choiceName][0]\n    }\n    return state\n  })\n\n  const setSingleChoiceOption = (choiceName, choiceValue) => {\n    setSingleChoices({\n      ...singleChoices,\n      [choiceName]: choiceValue,\n    })\n  }\n\n  const [booleanChoices, setBooleanChoices] = useState(booleanOptions)\n\n  const toggleBooleanChoiceOption = choiceName => {\n    setBooleanChoices({\n      ...booleanChoices,\n      [choiceName]: !booleanChoices[choiceName],\n    })\n  }\n\n  return (\n    <div className='showcase-component-container vf-u-border-color--grey--lightest'>\n      <div className='options'>\n        {singleChoiceOptions &&\n          Object.entries(singleChoiceOptions).map(([choiceName, options]) => {\n            return (\n              <div className='choice vf-form__item vf-stack'>\n                <label\n                  className='vf-form__label'\n                  htmlFor={`vf-form__select-${choiceName}`}>\n                  {choiceName}\n                </label>\n\n                <select\n                  style={{ width: 140 }}\n                  className='vf-form__select'\n                  id={`vf-form__select-${choiceName}`}\n                  onChange={event =>\n                    setSingleChoiceOption(choiceName, event.target.value)\n                  }>\n                  {options.map(options => (\n                    <option value={options}>{options}</option>\n                  ))}\n                </select>\n              </div>\n            )\n          })}\n        {booleanOptions && (\n          <fieldset className='choice vf-form__fieldset | vf-stack vf-stack--400'>\n            <legend className='vf-form__legend'>Boolean options</legend>\n            <div className='vf-cluster vf-cluster--400'>\n              <div className='vf-cluster__inner'>\n                {Object.entries(booleanOptions).map(\n                  ([choiceName, choiceValue]) => (\n                    <div className='vf-form__item vf-form__item--checkbox'>\n                      <input\n                        type='checkbox'\n                        checked={booleanChoices[choiceName]}\n                        onChange={() => toggleBooleanChoiceOption(choiceName)}\n                        id={`vf-form__checkbox-${choiceName}`}\n                        className='vf-form__checkbox'\n                      />\n                      <label\n                        htmlFor={`vf-form__checkbox-${choiceName}`}\n                        className='vf-form__label'>\n                        {choiceName}\n                      </label>\n                    </div>\n                  )\n                )}\n              </div>\n            </div>\n          </fieldset>\n        )}\n      </div>\n      <div className='vf-box renderer'>\n        {renderComponent({\n          ...singleChoices,\n          ...booleanChoices,\n        })}\n      </div>\n      <div className='code'>\n        <pre className='vf-code-example__pre'>\n          <code className='vf-code-example'>\n            {renderCodeString({ ...singleChoices, ...booleanChoices })}\n          </code>\n        </pre>\n      </div>\n    </div>\n  )\n}\n\nexport default ComponentVariants\n","import { VfButton } from '@visual-framework/vf-button/vf-button.react';\nimport React from 'react';\nimport ComponentVariants from '../component-variants/ComponentVariants';\nimport './ComponentShowcase.scss';\n\n/* React specific components showcase */\nexport default function ComponentShowcase() {\n  return (\n    <>\n      <div>\n        <section className='vf-intro | embl-grid embl-grid--has-centered-content'>\n          <div>{/* empty */}</div>\n          <div>\n            <h1 className='vf-intro__heading vf-intro__heading--has-tag'>\n              React Components Showcase\n            </h1>\n          </div>\n        </section>\n      </div>\n\n      <section className='embl-grid embl-grid--has-centered-content'>\n        <div>{/* empty */}</div>\n        <div className='vf-content'>\n          <h1>Button</h1>\n          <ComponentVariants\n            singleChoiceOptions={{\n              theme: ['primary', 'secondary', 'tertiary'],\n              size: ['sm', 'md', 'lg'],\n            }}\n            booleanOptions={{ outline: false }}\n            renderComponent={selectedProps => (\n              <VfButton text='Button' {...selectedProps} />\n            )}\n            renderCodeString={({ theme, outline, size }) =>\n              `<VfButton theme='vf-button-${theme}' size='vf-button-${size}' ${outline ? 'outline={true}' : ''} text='Button' />`\n            }\n          />\n        </div>\n      </section>\n    </>\n  )\n}\n","import React from 'react';\nimport { HashRouter as Router, Route, Link, NavLink } from \"react-router-dom\";\nimport VfLogoPath from '@visual-framework/vf-logo/assets/logo.svg';\nimport Home from './Home';\nimport TestPage from './TestPage';\nimport ComponentShowcase from './components/components-showcase/ComponentShowcase';\n// import './vf-components/vf-componenet-rollup/index.scss';\n\n// VF njk templates\n// import { VfLogo } from './vf-components/vf-extensions-react/vf-extensions-react.jsx';\n\nfunction App() {\n  return (\n    <Router basename={'/vf-react'}>\n      <div className=\"vf-body | vf-stack vf-stack--400\">\n        <header className=\"vf-global-header\">\n          <NavLink className=\"vf-logo\" to=\"/\">\n            <img className=\"vf-logo__image\" src={VfLogoPath} alt=\"Visual Framework 2.0\" />\n          </NavLink>\n\n          <nav className=\"vf-navigation vf-navigation--global | vf-cluster\">\n            <ul className=\"vf-navigation__list | vf-list | vf-cluster__inner\">\n              <li className=\"vf-navigation__item\">\n                <a href=\"/search\" className=\"vf-navigation__link\">Search</a>\n              </li>\n              <li className=\"vf-navigation__item\">\n                <a href=\"https://github.com/visual-framework/vf-core\" className=\"vf-navigation__link\">GitHub</a>\n              </li>\n              <li className=\"vf-navigation__item\">\n                <a href=\"https://join.slack.com/t/visual-framework/shared_invite/enQtNDAxNzY0NDg4NTY0LWFhMjEwNGY3ZTk3NWYxNWVjOWQ1ZWE4YjViZmY1YjBkMDQxMTNlNjQ0N2ZiMTQ1ZTZiMGM4NjU5Y2E0MjM3ZGQ\" className=\"vf-navigation__link\">Slack</a>\n              </li>\n            </ul>\n          </nav>\n        </header>\n        <nav className=\"vf-navigation vf-navigation--main | vf-cluster\">\n          <ul className=\"vf-navigation__list | vf-list | vf-cluster__inner\">\n            <li className=\"vf-navigation__item\">\n              <NavLink exact={true} to=\"/\" className=\"vf-navigation__link\">Home</NavLink>\n            </li>\n            <li className=\"vf-navigation__item\">\n              <NavLink exact={true} to=\"/testpage\" className=\"vf-navigation__link\">Sample page</NavLink>\n            </li>\n            <li className=\"vf-navigation__item\">\n              <NavLink to=\"/components-showcase\" className=\"vf-navigation__link\">Components Showcase</NavLink>\n            </li>\n          </ul>\n        </nav>\n\n        <Route exact path=\"/\" component={Home} />\n        <Route path=\"/components-showcase\" component={ComponentShowcase} />\n        <Route path=\"/testpage\" component={TestPage} />\n      </div>\n    </Router>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './vf-components/vf-componenet-rollup/index.scss';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n<App />,\ndocument.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n  "],"sourceRoot":""}